var headerBackground=document.querySelector("#dynamicBackground"),newcolorBackground=document.querySelector("#newcolor"),copyCssWrapper=document.querySelector(".copycss"),bgColorOne=document.querySelector("#bgColorOne"),bgColorTwo=document.querySelector("#bgColorTwo"),selectedDirection="to right",currentDirection="",directionInDeg="160deg";const bgStopPointOne=document.querySelector(".bgStopPointOne"),bgStopPointTwo=document.querySelector(".bgStopPointTwo");var currentIndex=0;const goForwardBtn=document.querySelector(".goForward"),goBackwardBtn=document.querySelector(".goBackward"),gradientNameLabel=document.querySelector(".gradientName");var colorData;const copyButton=document.getElementById("copy"),textButton=document.querySelector(".copycss"),apiURL="https://uigenkit.onrender.com/api/";function getData(){fetch(`${apiURL}lineargradientcolors`).then(response=>response.json()).then(obj=>{colorData=obj})}function goForward(){let validIndex=(currentIndex+=1)<=colorData.length-1;if(validIndex){let{colorStopOne:colorStopOne,colorStopTwo:colorStopTwo,gradientName:gradientName}=colorData[currentIndex];draw(colorStopOne,colorStopTwo),linearGradientPointOne.setColor(colorStopOne),linearGradientPointTwo.setColor(colorStopTwo),headerBackground.style.backgroundImage=`linear-gradient(${selectedDirection},${colorStopOne},${colorStopTwo})`,bgStopPointOne.value=colorStopOne,bgStopPointTwo.value=colorStopTwo,gradientNameLabel.textContent=gradientName,goBackwardBtn.hasAttribute("disabled")&&goBackwardBtn.removeAttribute("disabled")}else goForwardBtn.setAttribute("disabled",!validIndex)}function goBackward(){let validIndex;if((currentIndex-=1)>=0){let{colorStopOne:colorStopOne,colorStopTwo:colorStopTwo}=colorData[currentIndex];draw(colorStopOne,colorStopTwo),headerBackground.style.backgroundImage=`linear-gradient(${selectedDirection},${colorStopOne},${colorStopTwo})`,bgStopPointOne.value=colorStopOne,bgStopPointTwo.value=colorStopTwo,goForwardBtn.hasAttribute("disabled")&&goForwardBtn.removeAttribute("disabled")}else goBackwardBtn.setAttribute("disabled",!0)}function downloadAsImage(){var dynamicBackground,dd=document.querySelector("#thecanvas").toDataURL("image/jpg",1),a=document.createElement("a");a.href=dd;let timeInMiliSec=Date.now();a.download=`UiGenaratorKit_LinearGradientColorBackGround${timeInMiliSec}.jpg`,a.click()}function draw(bgone,bgtwo){var canvas,ctx=document.getElementById("thecanvas").getContext("2d");let myWidth=window.innerWidth,myHeight=window.innerHeight;var grd=ctx.createLinearGradient(0,0,myWidth,myHeight);if("135deg"==selectedDirection)var grd=ctx.createLinearGradient(0,0,myWidth,myHeight);if("315deg"==selectedDirection)var grd=ctx.createLinearGradient(myWidth,myHeight,0,0);if("225deg"==selectedDirection)var grd=ctx.createLinearGradient(0,myWidth,myHeight,0);if("45deg"==selectedDirection)var grd=ctx.createLinearGradient(myWidth,0,0,myHeight);ctx.rect(0,0,myWidth,myHeight),grd.addColorStop(0,bgone),grd.addColorStop(1,bgtwo),ctx.fillStyle=grd,ctx.fill()}function changBgColorOne(colorValue){bgStopPointOne.value=document.querySelector(".pcr-result").value,draw(colorValue,bgColorTwo.value),headerBackground.style.backgroundImage=`linear-gradient(${selectedDirection},${colorValue},${bgColorTwo.value})`}function changBgColorTwo(colorValue){bgStopPointTwo.value=document.querySelector(".pcr-result").value,draw(bgColorOne.value,colorValue),headerBackground.style.backgroundImage=`linear-gradient(${selectedDirection},${bgColorOne.value},${colorValue})`}function addcopycss(){copyCssWrapper.innerText=`background:${bgColorOne.value};/* fallback for old browsers */\nbackground: -webkit-${headerBackground.style.backgroundImage};/* Chrome 10-25, Safari 5.1-6 */\nbackground:${headerBackground.style.backgroundImage}; /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */`}getData(),$((function(){$("#directionBtnGroup input").on("click",(function(){var thisBtn=$(this),btnText=thisBtn.text(),btnValue=thisBtn.val();$("#selectedVal").text(btnValue);var chDirection=headerBackground.style.backgroundImage;currentDirection=chDirection.split(",")[0].split("(")[1];var res=chDirection.replace(/45deg|135deg|225deg|315deg|to right/gi,(function(){return btnValue}));selectedDirection=btnValue,headerBackground.style.backgroundImage=res,draw(bgStopPointOne.value,bgStopPointTwo.value)})),$("#bgColorOne").colorpicker(),$("#bgColorTwo").colorpicker()})),setTimeout(()=>{draw("rgb(54, 238, 213)","rgb(5, 1, 110)")},2e3),$(window).resize((function(){draw("rgb(54, 238, 213)","rgb(5, 1, 110)")})).resize();const linearGradientPointOne=Pickr.create({el:".bgOneColor-picker",theme:"nano",default:"rgb(54, 238, 213)",position:"bottom-middle",comparison:!1,components:{preview:!0,opacity:!0,hue:!0,interaction:{hex:!0,rgba:!0,input:!0}}}),linearGradientPointTwo=Pickr.create({el:".bgTwoColor-picker",theme:"nano",default:"rgb(5, 1, 110)",comparison:!1,components:{preview:!0,opacity:!0,hue:!0,interaction:{hex:!0,rgba:!0,input:!0}}});linearGradientPointOne.on("change",(color,instance)=>{let rgbaColor;changBgColorOne(color.toRGBA().toString())}),linearGradientPointTwo.on("change",(color,instance)=>{let rgbaColor;changBgColorTwo(color.toRGBA().toString())});const copyText=e=>{window.getSelection().selectAllChildren(textButton),document.execCommand("copy"),e.target.setAttribute("tooltip","Copied! âœ…")},resetTooltip=e=>{e.target.setAttribute("tooltip","Copy to clipboard")};copyButton.addEventListener("click",e=>copyText(e)),copyButton.addEventListener("mouseover",e=>resetTooltip(e));